{"ast":null,"code":"var _jsxFileName = \"/Users/arpan.tuladhar/Desktop/Project-X/frontend/tweet-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tweetContent, setTweetContent] = useState('');\n  const [tweets, setTweets] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tweets');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch tweets: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      setTweets(data);\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/create_tweet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `tweetContent=${encodeURIComponent(tweetContent)}`,\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error('An error occurred while creating the tweet.');\n      }\n      const newTweet = await response.json();\n      setTweets([...tweets, newTweet]);\n      setTweetContent('');\n      setMessage('Tweet created successfully');\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('An error occurred while creating the tweet.');\n    }\n  };\n  const handleEdit = async (id, updatedContent) => {\n    try {\n      const response = await fetch(`http://localhost:8080/edit_tweet/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `tweetContent=${encodeURIComponent(updatedContent)}`,\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error(`An error occurred while editing the tweet: ${response.status} ${response.statusText}`);\n      }\n      const updatedTweets = tweets.map(tweet => tweet.id === id ? {\n        ...tweet,\n        content: updatedContent\n      } : tweet);\n      setTweets(updatedTweets);\n      setMessage(`Tweet with ID ${id} edited successfully`);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage(`Error editing tweet with ID ${id}`);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:8080/delete_tweet/${id}`, {\n        method: 'DELETE',\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error(`An error occurred while deleting the tweet: ${response.status} ${response.statusText}`);\n      }\n      const updatedTweets = tweets.filter(tweet => tweet.id !== id);\n      setTweets(updatedTweets);\n      setMessage(`Tweet with ID ${id} deleted successfully`);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage(`Error deleting tweet with ID ${id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.includes('error') ? 'error-message' : 'success-message',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: tweet.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(tweet.id, 'Updated Content'),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(tweet.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, tweet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9MsTYO6YzgmST32a+vzWJLn05OY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tweetContent","setTweetContent","tweets","setTweets","message","setMessage","fetchTweets","response","fetch","ok","Error","status","statusText","data","json","error","console","handleSubmit","event","preventDefault","method","headers","body","encodeURIComponent","mode","newTweet","handleEdit","id","updatedContent","updatedTweets","map","tweet","content","handleDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","includes","onClick","_c","$RefreshReg$"],"sources":["/Users/arpan.tuladhar/Desktop/Project-X/frontend/tweet-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n\nconst App = () => {\n  const [tweetContent, setTweetContent] = useState('');\n  const [tweets, setTweets] = useState([]);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/tweets');\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch tweets: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setTweets(data);\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:8080/create_tweet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: `tweetContent=${encodeURIComponent(tweetContent)}`,\n        mode: 'cors',\n      });\n\n      if (!response.ok) {\n        throw new Error('An error occurred while creating the tweet.');\n      }\n\n      const newTweet = await response.json();\n      setTweets([...tweets, newTweet]);\n      setTweetContent('');\n      setMessage('Tweet created successfully');\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('An error occurred while creating the tweet.');\n    }\n  };\n\n  const handleEdit = async (id, updatedContent) => {\n    try {\n      const response = await fetch(`http://localhost:8080/edit_tweet/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: `tweetContent=${encodeURIComponent(updatedContent)}`,\n        mode: 'cors',\n      });\n\n      if (!response.ok) {\n        throw new Error(`An error occurred while editing the tweet: ${response.status} ${response.statusText}`);\n      }\n\n      const updatedTweets = tweets.map((tweet) =>\n        tweet.id === id ? { ...tweet, content: updatedContent } : tweet\n      );\n      setTweets(updatedTweets);\n      setMessage(`Tweet with ID ${id} edited successfully`);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage(`Error editing tweet with ID ${id}`);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:8080/delete_tweet/${id}`, {\n        method: 'DELETE',\n        mode: 'cors',\n      });\n\n      if (!response.ok) {\n        throw new Error(`An error occurred while deleting the tweet: ${response.status} ${response.statusText}`);\n      }\n\n      const updatedTweets = tweets.filter((tweet) => tweet.id !== id);\n      setTweets(updatedTweets);\n      setMessage(`Tweet with ID ${id} deleted successfully`);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage(`Error deleting tweet with ID ${id}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Create a Tweet</h1>\n      <form onSubmit={handleSubmit}>\n        {/* ... (your existing form inputs) */}\n      </form>\n\n      {message && (\n        <div className={message.includes('error') ? 'error-message' : 'success-message'}>\n          {message}\n        </div>\n      )}\n\n      <div className=\"tweet-list\">\n        <h2>Tweets</h2>\n        {tweets.map((tweet) => (\n          <div key={tweet.id} className=\"tweet\">\n            <p>{tweet.content}</p>\n            <button onClick={() => handleEdit(tweet.id, 'Updated Content')}>Edit</button>\n            <button onClick={() => handleDelete(tweet.id)}>Delete</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}